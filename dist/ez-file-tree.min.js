!function(angular){"use strict";angular.module("ez.fileTree",[]).constant("EzFileTreeConfig",{enableChecking:!1,multiSelect:!1,onlyFileSelection:!1,childrenField:"children",isFolder:function(data){return"folder"===data.type||"album"===data.type}}).controller("RecursionCtrl",["$scope","EzFileTreeConfig",function($scope,EzFileTreeConfig){var childrenField=EzFileTreeConfig.childrenField,activate=function(_scope){_scope.data._active=!0,"undefined"!=typeof _scope.$parent.$parent.data&&activate(_scope.$parent.$parent)},deactivate=function(_scope,data){var active=!1;angular.forEach(_scope.data[childrenField],function(v){return v._checked===!0&&data!==v?(active=!0,void 0):void 0}),_scope.data._active=active,active===!1&&"undefined"!=typeof _scope.$parent.$parent.data&&deactivate(_scope.$parent.$parent,data)};$scope.check=function(data){data._checked?deactivate($scope.$parent.$parent,data):activate($scope.$parent.$parent)}}]).directive("ezFileTree",["$compile","EzFileTreeConfig",function($compile,EzFileTreeConfig){return{restrict:"EA",scope:{tree:"=ezFileTree",getChildren:"="},templateUrl:"ez-file-tree-container.html",link:function(scope,element,attrs){var multiSelect="true"===attrs.multiSelect?!0:EzFileTreeConfig.multiSelect,childrenField=("true"===attrs.onlyFileSelection?!0:EzFileTreeConfig.onlyFileSelection,attrs.childrenField||EzFileTreeConfig.childrenField);scope.enableChecking="true"===attrs.enableChecking?!0:EzFileTreeConfig.enableChecking,scope.isFolder=attrs.isFolder?scope.$eval(attrs.isFolder):EzFileTreeConfig.isFolder,scope.toggle=function(e,data){if(data._open=!data._open,!data.children||data.children&&!data.children.length){if(!scope.getChildren)throw new Error("You must add a getChildren attribute");data.children=scope.getChildren()}};var unselectAll=function(files){angular.forEach(files,function(v){v[childrenField]&&v[childrenField].length&&unselectAll(v[childrenField]),v._selected=!1})};scope.select=function(item){item._selected?(item._selected=!1,multiSelect?scope.tree._selectedFiles.splice(scope.tree._selectedFiles.indexOf(item),1):scope.tree._selectedFile=null):(multiSelect?(scope.tree._selectedFiles||(scope.tree._selectedFiles=[]),scope.tree._selectedFiles.push(item)):(scope.tree._selectedFile=item,unselectAll(scope.tree[childrenField])),item._selected=!0)}}}}])}(angular);