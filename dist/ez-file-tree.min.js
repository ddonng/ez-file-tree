!function(angular){"use strict";angular.module("ez.fileTree",["ez.object2array"]).constant("EzFileTreeConfig",{enableChecking:!1,enableFolderSelection:!0,multiSelect:!1,recursiveSelect:!0,icons:{chevronRight:"fa fa-chevron-right",chevronDown:"fa fa-chevron-down",folder:"fa fa-folder",file:"fa fa-file"},childrenField:"children",idField:"id",typeField:"type",folderType:"folder"}).directive("ezFileTree",["$compile","$timeout","EzFileTreeConfig",function($compile,$timeout,EzFileTreeConfig){return{restrict:"EA",replace:!0,scope:{tree:"=ezFileTree",getChildren:"=?",config:"=?config"},templateUrl:"ez-file-tree-container.html",compile:function(element,attrs){var config=angular.extend({},EzFileTreeConfig);for(var key in EzFileTreeConfig)"undefined"!=typeof attrs[key]&&(config[key]=attrs[key]);return function(scope){var init=function(){scope.config=angular.extend(config,scope.config),scope.disableSelect=!1,scope.config.multiSelect?scope.tree._selectedFiles={}:scope.tree._selectedFile=null,scope.tree._activeFiles={},scope.tree[scope.config.childrenField]&&setParentOnChildren(scope.tree,!0)},setParentOnChildren=function(file,recursive){for(var k in file[scope.config.childrenField])file[scope.config.childrenField][k]._parent=file,recursive&&file[scope.config.childrenField][k][scope.config.childrenField]&&setParentOnChildren(file[scope.config.childrenField][k],!0)},hasChildrenSelected=function(file){var selected=!1;for(var key in file[scope.config.childrenField]){if(file[scope.config.childrenField][key]._selected){selected=!0;break}if(file[scope.config.childrenField].files&&hasChildrenSelected(file[scope.config.childrenField])){selected=!0;break}}return selected},activate=function(file){file._active=!0,scope.tree._activeFiles[file[scope.config.idField]]=file,file._parent&&activate(file._parent)},deactivate=function(file){var active=!1;file.children&&hasChildrenSelected(file)&&(active=!0),active||delete scope.tree._activeFiles[file[scope.config.idField]],file._active=active,active===!1&&void 0!==file._parent&&deactivate(file._parent)},select=function(file){(scope.config.enableFolderSelection||!isFolder(file))&&(scope.config.multiSelect?scope.tree._selectedFiles[file[scope.config.idField]]=file:(scope.tree._selectedFile=file,unselectAll(scope.tree[scope.config.childrenField])),file._selected=!0,scope.$emit("ez-file-tree.select",file),activate(file))},unselect=function(file){file._selected=!1,scope.$emit("ez-file-tree.unselect",file),scope.config.multiSelect?delete scope.tree._selectedFiles[file[scope.config.idField]]:scope.tree._selectedFile=null,deactivate(file)},unselectAll=function(files){for(var key in files)"undefined"!=typeof files[key][scope.config.childrenField]&&unselectAll(files[key][scope.config.childrenField]),files[key]._selected=!1,scope.$emit("ez-file-tree.unselect",files[key])};scope.isFolder=function(file){return void 0!==typeof file.children||file[scope.config.typeField]===scope.config.folderType},scope.toggle=function(e,file){if(scope.isFolder(file)&&(scope.disableSelect=!0,$timeout(function(){scope.disableSelect=!1},500),file._open=!file._open,!file.children||file.children&&!file.children.length)){if(!scope.getChildren)throw new Error("You must add a getChildren attribute");scope.getChildren(file).then(function(children){for(var key in children)children[key]._parent=file;file.children=children})}},scope.showCheckbox=function(file){return!scope.config.enableChecking||scope.isFolder(file)&&!config.enableFolderSelection?!1:!0},scope.select=function(e,file){e.preventDefault(),$timeout(function(){scope.disableSelect!==!0&&(scope.disableSelect=!1,file._selected?unselect(file):select(file))},200)},init()}}}}])}(angular);